[mcu EBBCan]
canbus_uuid: 9e2ad02abba7

#[adxl345]
#cs_pin: EBBCan: PB12
#spi_software_sclk_pin: EBBCan: PB10
#spi_software_mosi_pin: EBBCan: PB11
#spi_software_miso_pin: EBBCan: PB2
#axes_map: x,y,z

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
rotation_distance: 4.63768116
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
sensor_type: EPCOS 100K B57560G104F
sensor_pin: EBBCan: PA3
min_extrude_temp: 5
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 300

#sensor_type:MAX31865
#sensor_pin: EBBCan: PA4
#spi_bus: spi1
#rtd_nominal_r: 100
#rtd_reference_r: 430
#rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.650
stealthchop_threshold: 999999

[fan_generic sb_fan]
pin: EBBCan: PA0

[heater_fan hotend_fan]
pin: EBBCan: PA1
heater: extruder
heater_temp: 50.0

[neopixel hotend_rgb]
pin: EBBCan:PD3

#[bltouch]
#sensor_pin: ^EBBCan:PB8
#control_pin: EBBCan:PB9

#[filament_switch_sensor switch_sensor]
#switch_pin: EBBCan:PB4

#[filament_motion_sensor motion_sensor]
#switch_pin: ^EBBCan:PB3

[filament_switch_sensor O2_sensor]
switch_pin: EBBCan:PB6
pause_on_runout: False
runout_gcode: runnout_init
insert_gcode: filament_load_init
event_delay: 1.0
pause_delay: 0.1


[gcode_button filament_unload]
pin: EBBCan:PB5
press_gcode:
    BLAST_MESSAGE MSG="e"
release_gcode:
    BLAST_MESSAGE MSG="o"

###
[mcu eddy]
canbus_uuid: 4f9ad8869cac

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu
sensor_mcu: eddy
min_temp: 10
max_temp: 100

[temperature_sensor btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26

# For all Eddy (USB/Duo/Coil)
[probe_eddy_ng btt_eddy]
sensor_type: ldc1612
# Eddy USB/Duo values below. For Eddy Coil, replace these two with mcu/bus for your setup.
i2c_mcu: eddy
i2c_bus: i2c0f
samples_per_second: 250 # 250 by default
reg_drive_current: 16
tap_drive_current: 17
x_offset: -18 # These offsets are for this mount https://www.printables.com/model/1115090-eddy-duo-mount-v2
y_offset: 16
tap_adjust_z: -0.08 #-0.155            #-0.075 for stock buildplate
tap_samples_stddev: 0.05


[bed_mesh]
speed: 150 #500
horizontal_move_z: 3
mesh_min: 15,18 # These min/max points are with the above linked Eddy mount on the stock toolhead.
mesh_max: 335,335
probe_count: 15,15 # 25,25 # Set to a lower 15,15 default as it appears a too high probe_count (too dense mesh) is bad with rapid_scan, see: https://www.klipper3d.org/Bed_Mesh.html#rapid-continuous-scanning
algorithm: bicubic
bicubic_tension: 0.5
split_delta_z: 0.0125 # see: https://www.klipper3d.org/Bed_Mesh.html#move-splitting
mesh_pps: 3,3
adaptive_margin: 5
fade_start: 1
fade_end: 10
fade_target: 0
#scan_overshoot: 5  #uncomment this section if you still have room left over on the X axis for some scan overshoot to product smoother movements and more accurate scanning. Uncommenting this should be fine if you are using a standard voron mount.

[safe_z_home]
home_xy_position: 177, 177
z_hop: 10
z_hop_speed: 25
speed: 200

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: _QUAD_GANTRY_LEVEL
gcode:
    SAVE_GCODE_STATE NAME=STATE_QGL
    BED_MESH_CLEAR
    {% if not printer.quad_gantry_level.applied %}
    # Note! Replace this 5 with whatever you want the coarse QGL to happen at.
    # BTT Eddy should keep 5, Mellow Fly/Cartographer can use 10
    _QUAD_GANTRY_LEVEL horizontal_move_z=5 retry_tolerance=1       
    {% endif %}
    _QUAD_GANTRY_LEVEL horizontal_move_z=2
    # G28 Z
    RESTORE_GCODE_STATE NAME=STATE_QGL

[gcode_macro Z_TILT_ADJUST]
gcode:
    SAVE_GCODE_STATE NAME=STATE_Z_TILT
    BED_MESH_CLEAR
    {% if not printer.z_tilt.applied %}
    # Note! Replace this 5 with whatever you want the coarse QGL to happen at.
    # BTT Eddy should keep 5, Mellow Fly/Cartographer can use 10
    _Z_TILT_ADJUST horizontal_move_z=5 retry_tolerance=1
    {% endif %}
    _Z_TILT_ADJUST horizontal_move_z=2
    # G28 Z
    RESTORE_GCODE_STATE NAME=STATE_Z_TILT
